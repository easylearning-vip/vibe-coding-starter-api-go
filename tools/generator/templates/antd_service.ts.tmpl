import { request } from '@umijs/max';

const API_BASE = '{{.ApiPrefix}}';

/**
 * {{.Model}} 相关的 API 接口
 */

// 获取{{.Model}}列表
export interface Get{{.Model}}ListParams {
  page?: number;
  page_size?: number;
  search?: string;
{{- if .WithSearch}}
  start_date?: string;
  end_date?: string;
{{- end}}
  sort?: string;
  order?: string;
}

export interface {{.Model}}ListResponse {
  data: {{.Model}}API.{{.Model}}[];
  total: number;
  page: number;
  size: number;
}

/**
 * 获取{{.Model}}列表
 */
export async function get{{.Model}}List(params: Get{{.Model}}ListParams): Promise<{{.Model}}ListResponse> {
  return request<{{.Model}}ListResponse>(`${API_BASE}/{{.ModelPlural}}`, {
    method: 'GET',
    params,
  });
}

/**
 * 获取单个{{.Model}}详情
 */
export async function get{{.Model}}(id: number): Promise<{{.Model}}API.{{.Model}}> {
  return request<{{.Model}}API.{{.Model}}>(`${API_BASE}/{{.ModelPlural}}/${id}`, {
    method: 'GET',
  });
}

/**
 * 创建{{.Model}}
 */
export async function create{{.Model}}(params: {{.Model}}API.Create{{.Model}}Request): Promise<{{.Model}}API.{{.Model}}> {
  return request<{{.Model}}API.{{.Model}}>(`${API_BASE}/{{.ModelPlural}}`, {
    method: 'POST',
    data: params,
  });
}

/**
 * 更新{{.Model}}
 */
export async function update{{.Model}}(id: number, params: {{.Model}}API.Update{{.Model}}Request): Promise<{{.Model}}API.{{.Model}}> {
  return request<{{.Model}}API.{{.Model}}>(`${API_BASE}/{{.ModelPlural}}/${id}`, {
    method: 'PUT',
    data: params,
  });
}

/**
 * 删除{{.Model}}
 */
export async function delete{{.Model}}(id: number): Promise<{{.Model}}API.SuccessResponse> {
  return request<{{.Model}}API.SuccessResponse>(`${API_BASE}/{{.ModelPlural}}/${id}`, {
    method: 'DELETE',
  });
}

{{- if .WithBatch}}
/**
 * 批量删除{{.Model}}
 */
export async function batchDelete{{.Model}}(ids: number[]): Promise<{{.Model}}API.SuccessResponse> {
  return request<{{.Model}}API.SuccessResponse>(`${API_BASE}/{{.ModelPlural}}/batch`, {
    method: 'DELETE',
    data: { ids },
  });
}
{{- end}}

{{- if .WithExport}}
/**
 * 导出{{.Model}}数据
 */
export async function export{{.Model}}(params: Get{{.Model}}ListParams): Promise<Blob> {
  return request<Blob>(`${API_BASE}/{{.ModelPlural}}/export`, {
    method: 'GET',
    params,
    responseType: 'blob',
  });
}
{{- end}}
