package model

import (
{{range .RequiredImports}}
	"{{.}}"
{{end}}

	"gorm.io/gorm"
)

// {{.Name}} {{.Name}}模型
type {{.Name}} struct {
	BaseModel
{{range .Fields}}
	{{.Name}} {{.Type}} `json:"{{.JSONName}}" {{.GormTag}}` // {{.Comment}}
{{end}}
}

// TableName 获取表名
func ({{.Name}}) TableName() string {
	return "{{.NamePlural}}"
}

// BeforeCreate GORM 钩子：创建前
func ({{.NameCamel}} *{{.Name}}) BeforeCreate(tx *gorm.DB) error {
	// 调用基础模型的钩子
	if err := {{.NameCamel}}.BaseModel.BeforeCreate(tx); err != nil {
		return err
	}

	// 在这里添加特定的创建前逻辑
	return nil
}

// BeforeUpdate GORM 钩子：更新前
func ({{.NameCamel}} *{{.Name}}) BeforeUpdate(tx *gorm.DB) error {
	// 调用基础模型的钩子
	if err := {{.NameCamel}}.BaseModel.BeforeUpdate(tx); err != nil {
		return err
	}

	// 在这里添加特定的更新前逻辑
	return nil
}
